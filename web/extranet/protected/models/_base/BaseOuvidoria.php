<?php

/**
 * This is the model base class for the table "ouvidoria".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ouvidoria".
 *
 * Columns in table "ouvidoria" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idcontato
 * @property string $ip
 * @property string $data
 * @property string $nome
 * @property string $cpf
 * @property string $setor
 * @property string $assunto
 * @property string $mensagem
 * @property string $ativo
 *
 */
abstract class BaseOuvidoria extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ouvidoria';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ouvidoria|Ouvidorias', $n);
	}

	public static function representingColumn() {
		return array('data','nome');
	}

	public function rules() {
		return array(
			array('ip, nome, cpf, setor, assunto', 'length', 'max'=>100),
			array('ativo', 'length', 'max'=>1),
			array('data, mensagem', 'safe'),
			array('ip, data, nome, cpf, setor, assunto, mensagem, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idcontato, ip, data, nome, cpf, setor, assunto, mensagem, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idcontato' => Yii::t('app', 'Idcontato'),
			'ip' => Yii::t('app', 'Ip'),
			'data' => Yii::t('app', 'Data'),
			'nome' => Yii::t('app', 'Nome'),
			'cpf' => Yii::t('app', 'Cpf'),
			'setor' => Yii::t('app', 'Setor'),
			'assunto' => Yii::t('app', 'Assunto'),
			'mensagem' => Yii::t('app', 'Mensagem'),
			'ativo' => Yii::t('app', 'Ativo'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idcontato', $this->idcontato);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('cpf', $this->cpf, true);
		$criteria->compare('setor', $this->setor, true);
		$criteria->compare('assunto', $this->assunto, true);
		$criteria->compare('mensagem', $this->mensagem, true);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	public function afterSave(){
		$message = new YiiMailMessage;
		$message->view = 'ouvidoria';
		$message->setBody(array('ouvidoria' => $this),'text/html','latin1');
		$message->subject = 'Ouvidoria'.' - '.date('d/m/Y H:i:s');
		$message->addTo(Yii::app()->params['email_ouvidoria']);
		$message->setReplyTo($this->email);
		$message->setFrom(array('noreply@popupdigital.com.br'  => Yii::app()->name));
		Yii::app()->mail->send($message);
	}

}