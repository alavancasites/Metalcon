<?php

/**
 * This is the model base class for the table "usuario_recuperasenha".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsuarioRecuperasenha".
 *
 * Columns in table "usuario_recuperasenha" available as properties of the model,
 * followed by relations of table "usuario_recuperasenha" available as properties of the model.
 *
 * @property integer $idusuario_recuperasenha
 * @property integer $idusuario
 * @property string $data_valido
 * @property string $token
 * @property string $ativo
 *
 * @property Usuario $usuario
 */
abstract class BaseUsuarioRecuperasenha extends GxActiveRecord {
	
    
        
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'usuario_recuperasenha';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsuarioRecuperasenha|UsuarioRecuperasenhas', $n);
	}

	public static function representingColumn() {
		return array('data_valido');
	}

	public function rules() {
		return array(
			array('idusuario', 'required'),
			array('idusuario', 'numerical', 'integerOnly'=>true),
			array('token', 'length', 'max'=>180),
			array('ativo', 'length', 'max'=>1),
			array('data_valido', 'safe'),
			array('data_valido, token, ativo', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idusuario_recuperasenha, idusuario, data_valido, token, ativo', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'usuario' => array(self::BELONGS_TO, 'Usuario', 'idusuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idusuario_recuperasenha' => Yii::t('app', 'Idusuario Recuperasenha'),
			'idusuario' => null,
			'data_valido' => Yii::t('app', 'Data Valido'),
			'token' => Yii::t('app', 'Token'),
			'ativo' => Yii::t('app', 'Ativo'),
			'usuario' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idusuario_recuperasenha', $this->idusuario_recuperasenha);
		$criteria->compare('idusuario', $this->idusuario);
		$criteria->compare('data_valido', $this->data_valido, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('ativo', $this->ativo, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}